{
    "Name": "SQLServerAlwaysOn.OnExistingDomain",
    "Description": "Creates SQL Server 2014 AlwaysOn deployment with disaster recovery on a secondary datacenter. The current version creates configures the SQL availability group.It requires existence of an active directory infrastructure. It requires existence of an active directory infrastructure with VNet address space as 10.0.0.0/8, a root domain controller with static IP 10.0.0.8 and DNS server named 'ad-dns1'.",
    "Version": "0.2.3",
    Parameters": [
        {
            "Name": "Region",
            "Type": "String",
			"TypeHint": "AzureRegionName",
            "Description": "Azure region to which the secondary datacenter infrastructure will be deployed. This should be different from the primary datacenter's region."			
        },
        {
            "Name": "AffinityGroup",
            "Type": "String",
			"TypeHint": "AzureAffinityGroupName",
            "Description": "Azure affinity group to which the secondary datacenter infrastructure will be deployed."
        },
        {
            "Name": "VnetName",
            "Type": "String",
            "Description": "Azure Virtual Network containing the SQL Availability Group's secondary datacenter VMs. This should be different from the one which will host the primary datacenter SQL Availability Group VMs."
        },
        {
            "Name": "DiskStore",
            "Type": "String",
			"TypeHint": "AzureStorageName",
            "Description": "Name of Azure storage account for creating secondary datacenter VM disks. This should be different from the one which will host the primary datacenter SQL Availability Group VMs."
        },
        {
            "Name": "FQDN",
            "Type": "String",
            "TypeHint": "domain",
            "Description": "Fully qualified domain name which is being used for setting up active directory. The domain should have been already configured in the primary datacenter.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "DRCloudService",
            "Type": "String",
            "TypeHint": "AzureCloudServiceName",
            "Description": "Name of the Azure Cloud Service."
        },
        {
            "Name": "DRSQLVMSize",
            "Type": "String",
            "TypeHint": "AzureRoleSize",
            "Description": "Size of the secondary datacenter SQL VM. The minimum recommended size is 'Large'.",
            "Default": "Large"
        },
        {
            "Name": "AdminName",
            "Type": "String",
            "TypeHint": "username",
            "Description": "Name of local administrator account.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "AdminPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password of local administrator account.",
            "MaskValue": true,
            "Minimum": 8,
            "Maximum": 127
        },
		{
            "Name": "DomainJoinUserName",
            "Type": "String",
            "TypeHint": "username",
            "Description": "Domain user account which is to be used for joining the disaster recovery VMs to domain. This user account must be a member of the group 'Domain Admins'.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "DomainJoinUserPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password of user account which is to be used for joining disaster recovery VMs to domain.",
            "MaskValue": true,
            "Minimum": 8,
            "Maximum": 127
        },
        {
            "Name": "SqlAdminPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password for SQL sa account.",
            "Minimum": 1,
            "Maximum": 64
        },
		{
            "Name": "SqlSvcAccountName",
            "Type": "String",
            "TypeHint": "username",
            "Description": "Name of SQL service account.",
            "Minimum": 1,
            "Maximum": 64
        },
		{
            "Name": "SqlSvcAccountPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password of SQL service account.",
            "MaskValue": true,
            "Minimum": 1,
            "Maximum": 64
        },
		{
            "Name": "NumberOfPrimaryDatacenterSQLNodes",
            "Type": "Number",
            "Description": "No of SQL nodes in the primary datacenter.",
            "Default": 2,
            "Minimum": 2,
            "Maximum": 5
        },
		{
            "Name": "AvailabilityGroupName",
            "Type": "String",
            "Description": "Name of SQL Server Availability Group.",
            "Minimum": 1,
            "Maximum": 32
        },
		{
            "Name": "DatabaseName",
            "Type": "String",
            "Description": "Name of the database which is to be added to the SQL Server Availability Group.",
            "Maximum": 64
        }
		{% assign fqdnSplit = FQDN | split: '.' -%}
		{% assign Domain = fqdnSplit[0] -%}
    ],
    "AffinityGroup": {
        "Name": "{{AffinityGroup}}",
        "Region": "{{Region}}",
        "Label": "Created by Brewmaster"
    },
    "StorageAccounts": [
        {
            "Name": "{{DiskStore}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "A non-georedundant disk store",
            "DisableGeoReplication": true
        }
    ],	
	"Network": {        
        "LocalSites": [],
        "VirtualSites": [
            {
                "Name": "{{VnetName}}",
                "AffinityGroup": "{{DRAffinityGroup}}",
                "AddressSpace": [
                    "172.16.0.0/20"
                ],
                "Subnets": [
                    {
                        "Name": "sql-subnet",
                        "AddressPrefix": "172.16.2.0/28"
                    }
                ]
            }
        ]
    },
    "CloudServices": [		
		{
            "Name": "{{DRCloudService}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "SQL Server AlwaysOn disaster recovery VM setup.",
            "Deployment": {
                "VirtualNetwork": "{{VnetName}}",
                "VirtualMachines": [
                    {
                        "Name": "drsql1",
                        "RoleSize": "{{DRSQLVMSize}}",
                        "Subnets": [
                            "sql-subnet"
                        ],
						"StaticVNetIPAddress": "172.16.2.5",
                        "AvailabilitySet": "sqlha-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "fb83b3509582419d99629ce476bcb5c8__SQL-Server-2014-RTM-12.0.2361.0-Enterprise-ENU-Win2012R2-cy14su05"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin:local",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false,
                            "DomainJoinSettings": {
                                "DomainToJoin": "{{FQDN}}",
                                "CredentialId": "DomainJoinCred"
                            }
                        },
                        "ConfigSets": [
                            "CreateSqlAG"
                        ]
                    }
                ],
                "DiskStorageAccount": "{{DiskStore}}",
				"InternalLoadBalancer": {
					"Name": "DRAGListenerLB",
					"Subnet": "sql-subnet",
					"StaticVNetIPAddress":"172.16.2.10"
				}
            }
        }
    ],    
    "Credentials": [
		{
		  "Name": "DomainAdmin",
		  "UserName": "{{Domain}}\\{{AdminName}}",
		  "Password": "{{AdminPassword}}"
		},
        {
            "Name": "DomainAdmin:local",
            "UserName": "{{AdminName}}",
            "Password": "{{AdminPassword}}"
        },
        {
            "Name": "DomainJoinCred",
            "UserName": "{{Domain}}\\{{DomainJoinUserName}}",
            "Password": "{{DomainJoinUserPassword}}"
        }
    ],
    "ConfigSets": [                 
        {
            "Name": "CreateSqlAG",
            "Description": "SQL VMs within the SqlAlwaysOn deployment.",
			"Endpoints": [
                {
                    "Name": "AGListener",
                    "LocalPort": 1433,
                    "Protocol": "tcp",
                    "Port": 1433,
                    "EnableDirectServerReturn": true,
                    "Rules": [],
					"InternalLoadBalancerName": "DRAGListenerLB",
                    "LoadBalancerProbe": {
                        "Name": "AGListener-LB",
                        "Protocol": "tcp",
                        "Port": 59999
                    }
                }
			],
            "ConfigurationIds": [
				"InitSqlAlwaysOn",
				"CreateSqlAvailabilityGroup"
            ]
        }
    ],
    "Configurations": [               
        {
            "Name": "InitSqlAlwaysOn",
            "Description": "Enabled SQL AlwaysOn feature on the node.",
            "Resources": [
                {
                    "Type": "xSqlHAService",
                    "ImportModule": "xAzureAvailabilityGroupDR",
                    "ImportTypeName": "MSFT_xSqlHAService",
                    "Name": "EnableSqlAlwaysOn",
                    "Args": {
                        "InstanceName": "%%$env:COMPUTERNAME",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)",
                        "ServiceCredential": "%%New-Object PSCredential '{{Domain}}\\{{SqlSvcAccountName}}', (ConvertTo-SecureString '{{SqlSvcAccountPassword}}' -AsPlainText -Force)"
                    }
                },
				{
                    "Credential": "DomainAdmin:local",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "CreateSqlAlwaysOnEndpoint",
                    "GetScript": "@{ ServerInstance = $env:COMPUTERNAME; AllowedUser = $ServiceAccount; EndPointName = $EndPointName; PortNumber = $EndPointPort; Configured = [bool] [int](OSQL -S $env:COMPUTERNAME -E -Q \"select count(*) from master.sys.endpoints where name = '$EndPointName'\" -h-1)[0] }",
                    "SetScript": "\r\n$serverPath   = \"SQLSERVER:\\SQL\\$env:COMPUTERNAME\\Default\"\r\n$endpointPath = \"$serverPath\\Endpoints\\$EndpointName\"\r\nNew-SqlHadrEndpoint -Path $serverPath -Name $EndPointName -Port $EndPointPort -EA Stop | Out-Null\r\nWrite-Verbose \"Created Endpoint [$endpointName] on port [$endpointPort]\"\r\nSet-SqlHadrEndpoint -Path $endpointPath -State \"Started\" -EA Continue | Out-Null\r\nWrite-Verbose \"Starting Endpoint [$EndPointName] (if not already started)\"\r\nInvoke-SqlCmd -Query \"GRANT CONNECT ON ENDPOINT::[$EndPointName] TO [$SqlServiceAccount]\" -ServerInstance $env:COMPUTERNAME\r\nWrite-Verbose \"Granting endpoint connect permissions to [$SqlServiceAccount]\"",
                    "TestScript": "$endpoint = OSQL -S $env:COMPUTERNAME -E -Q \"select count(*) from master.sys.endpoints where name = '$EndPointName'\" -h-1\r\nreturn ([bool] [int] $endpoint[0].Trim() )",
                    "Args": {
                        "EndPointName": "MyMirroringEndpoint",
                        "EndPointPort": "%%5022",
                        "SqlServiceAccount": "{{Domain}}\\{{SqlSvcAccountName}}"
                    },
                    "Requires": [
                        "[xSqlHAService]EnableSqlAlwaysOn"
                    ],
                    "Description": "Creates SQL Server mirroring endpoint for participating in availability group."
                }
            ]
        },
		{
			"Name": "CreateSqlAvailabilityGroup",
            "Description": "Creates SQL availability group.",
            "Resources": [                
				{
                    "Type": "xSqlHAGroup",
                    "ImportModule": "xAzureAvailabilityGroupDR",
                    "ImportTypeName": "ADITI_xSqlHAGroup",
                    "Name": "CreateAvailabilityGroup",
                    "Args": {
                        "Name": "{{AvailabilityGroupName}}",
                        "NumberOfPrimaryDatacenterSQLNodes": "%%{{NumberOfPrimaryDatacenterSQLNodes}}",
                        "PrimaryDatacenterSQLNodeNamePrefix": "sql",
                        "EndpointPort": "%%5022",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)"
                    }
                },
				{
                    "Type": "xSqlHADatabase",
                    "ImportModule": "xAzureAvailabilityGroupDR",
                    "ImportTypeName": "ADITI_xSqlHADatabase",
                    "Name": "SetupAGDatabase",
                    "Args": {
                        "AvailabilityGroupName": "{{AvailabilityGroupName}}",
                        "Database": "{{DatabaseName}}",
                        "DatabaseBackupPath": "\\\\quorum\\backup",
						"NumberOfPrimaryDatacenterSQLNodes": "%%{{NumberOfPrimaryDatacenterSQLNodes}}",
                        "PrimaryDatacenterSQLNodeNamePrefix": "sql",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)"
                    },
                    "Requires": [
                        "[xSqlHAGroup]CreateAvailabilityGroup"
                    ]
                },
                {
                    "Type": "xAzureAvailabilityGroupListener",
                    "ImportModule": "xAzureAvailabilityGroupListenerDR",
                    "ImportTypeName": "ADITI_xAzureAvailabilityGroupListener",
                    "Name": "CreateAGListener",
                    "Args": {
                        "Name": "{{AvailabilityGroupName}}Listener",
                        "PrimaryAvailabilityGroupIPAddress": "10.20.2.100",
						"SecondaryAvailabilityGroupIPAddress": "172.16.2.10",
						"PrimarySQLNodeName": "sql1",
                        "AvailabilityGroupName": "{{AvailabilityGroupName}}",
                        "SqlAdministratorCredential": "%%New-Object PSCredential 'sa', (ConvertTo-SecureString '{{SqlAdminPassword}}' -AsPlainText -Force)",
                        "DomainAdministratorCredential": "%%New-Object PSCredential '{{Domain}}\\{{DomainJoinUserName}}', (ConvertTo-SecureString '{{DomainJoinUserPassword}}' -AsPlainText -Force)"
                    },
                    "Requires": [
                        "[xSqlHADatabase]SetupAGDatabase"
                    ]
                }
            ]
        }
    ]
}