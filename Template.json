{
    "Name": "SQLServerAlwaysOn.OnExistingDomain",
    "Description": "Creates SQL Server 2014 AlwaysOn deployment with disaster recovery on a secondary datacenter. The current version creates the secondary datacenter infrastructure.It requires existence of an active directory infrastructure with It requires existence of an active directory infrastructure with VNet address space as 10.0.0.0/8, a root domain controller with static IP 10.0.0.8 and DNS server named 'ad-dns1'.",
    "Version": "0.2.1",
        "Parameters": [
        {
            "Name": "Region",
            "Type": "String",
			"TypeHint": "AzureRegionName",
            "Description": "Azure region to which the secondary datacenter infrastructure will be deployed. This should be different from the primary datacenter's region."
        },
        {
            "Name": "AffinityGroup",
            "Type": "String",
			"TypeHint": "AzureAffinityGroupName",
            "Description": "Azure affinity group to which the secondary datacenter infrastructure will be deployed."
        },
        {
            "Name": "VnetName",
            "Type": "String",
            "Description": "Azure Virtual Network containing the SQL Availability Group's secondary datacenter VMs. This should be different from the one which will host the primary datacenter SQL Availability Group VMs."
        },
        {
            "Name": "DiskStore",
            "Type": "String",
			"TypeHint": "AzureStorageName",
            "Description": "Name of Azure storage account for creating secondary datacenter VM disks. This should be different from the one which will host the primary datacenter SQL Availability Group VMs."
        },
		{
            "Name": "PrimaryVnetName",
            "Type": "String",
            "Description": "Name of Azure Virtual Network in the primary datacenter for disaster recovery. This should already exist with address space 10.0.0.0/8 and having a gateway subnet with address prefix as 10.20.4.0/28, root domain controller with IP Address as 10.0.0.8 and a DNS server named 'ad-dns1'."
        },
		{
            "Name": "PrimaryVnetGatewayConnectionKey",
            "Type": "String",
            "Description": "Key for configuring the gateway connection with disaster recovery Azure Virtual Network in secondary datacenter.",
			"TypeHint": "password"
        },
        {
            "Name": "DRADCloudService",
            "Type": "String",
            "TypeHint": "AzureCloudServiceName",
            "Description": "Name of the Azure Cloud Service to which domain controller VM will be deployed."
        },
        {
            "Name": "FQDN",
            "Type": "String",
            "TypeHint": "domain",
            "Description": "Fully qualified domain name which is being used for setting up active directory. The domain should have been already configured in the primary datacenter.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "DRADVMSize",
            "Type": "String",
            "TypeHint": "AzureRoleSize",
            "Description": "Size of the domain controller VM.",
            "Default": "Small"
        },        
        {
            "Name": "DRSQLAGCloudService",
            "Type": "String",
            "TypeHint": "AzureCloudServiceName",
            "Description": "Name of the Azure Cloud Service."
        },        
        {
            "Name": "DRSQLVMSize",
            "Type": "String",
            "TypeHint": "AzureRoleSize",
            "Description": "Size of the SQL VM. The minimum recommended size is 'Large'.",
            "Default": "Large"
        },
        {
            "Name": "AdminName",
            "Type": "String",
            "TypeHint": "username",
            "Description": "Name of local administrator account.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "AdminPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password of local administrator account.",
            "MaskValue": true,
            "Minimum": 8,
            "Maximum": 127
        },
        {
            "Name": "DSRMPassPhrase",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Safemode Password for domain",
            "MaskValue": true,
            "Minimum": 8,
            "Maximum": 127
        },
		{
            "Name": "DomainJoinUserName",
            "Type": "String",
            "TypeHint": "username",
            "Description": "Domain user account which is to be used for joining the disaster recovery VMs to domain. This user account must be a member of the group 'Domain Admins'.",
            "Minimum": 1,
            "Maximum": 64
        },
        {
            "Name": "DomainJoinUserPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password of user account which is to be used for joining disaster recovery VMs to domain.",
            "MaskValue": true,
            "Minimum": 8,
            "Maximum": 127
        },
        {
            "Name": "SqlAdminPassword",
            "Type": "String",
            "TypeHint": "password",
            "Description": "Password for SQL sa account.",
            "Minimum": 1,
            "Maximum": 64
        }
		{% assign fqdnSplit = FQDN | split: '.' -%}
		{% assign Domain = fqdnSplit[0] -%}
    ],
    "Network": {
        "DnsServers": [
            {
                "Name": "ad-drdns1",
                "IPAddress": "172.16.0.5"
            }
        ],
        "LocalSites": [],
        "VirtualSites": [
            {
                "Name": "{{VnetName}}",
                "AffinityGroup": "{{DRAffinityGroup}}",
                "AddressSpace": [
                    "172.16.0.0/20"
                ],
                "Subnets": [
                    {
                        "Name": "ad-subnet",
                        "AddressPrefix": "172.16.0.0/28"
                    },
                    {
                        "Name": "sql-subnet",
                        "AddressPrefix": "172.16.2.0/28"
                    },
					{
						"Name": "GatewaySubnet",
						"AddressPrefix": "172.16.4.0/28"
					}
                ],
                "DnsServers": [
					"ad-dns1",
					"ad-drdns1"
                ],
				"ConnectedVirtualNetworkSite": {
					"SiteName": "{{PrimaryVnetName}}",
					"SiteAddressPrefix": [
						"10.0.0.0/8"
					],
					"SiteGatewaySubnetAddressPrefix": "10.20.4.0/28",
					"SiteGatewayKey": "{{PrimaryVnetGatewayConnectionKey}}"
				}
            }
        ]
    },
    "AffinityGroup": {
        "Name": "{{AffinityGroup}}",
        "Region": "{{Region}}",
        "Label": "Created by Brewmaster"
    },
    "StorageAccounts": [
        {
            "Name": "{{DiskStore}}",
            "AffinityGroup": "{{DRAffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "A non-georedundant disk store",
            "DisableGeoReplication": true
        }
    ],	
    "CloudServices": [
		{
            "Name": "{{DRADCloudService}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "SQL Server AlwaysOn disaster recovery AD setup.",
            "Deployment": {
                "VirtualNetwork": "{{VnetName}}",
                "VirtualMachines": [
                    {
                        "Name": "drdc1",
                        "RoleSize": "{{DRADVMSize}}",
                        "Subnets": [
                            "ad-subnet"
                        ],
						"StaticVNetIPAddress": "172.16.0.5",
                        "AvailabilitySet": "ad-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "a699494373c04fc0bc8f2bb1389d6106__Windows-Server-2012-R2-*"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false
                        },
                        "ConfigSets": [
                            "DomainController"
                        ],
                        "DeploymentGroup": "ADDomainController"
                    }
                ],
				"DnsServers": [
				  {
					"Name": "DCLoopback",
					"IPAddress": "127.0.0.1"
				  }
				],
                "DiskStorageAccount": "{{DiskStore}}"
            }
        },
		{
            "Name": "{{DRSQLAGCloudService}}",
            "AffinityGroup": "{{AffinityGroup}}",
            "Region": "{{Region}}",
            "Description": "SQL Server AlwaysOn disaster recovery VM setup.",
            "Deployment": {
                "VirtualNetwork": "{{VnetName}}",
                "VirtualMachines": [
                    {
                        "Name": "drsql1",
                        "RoleSize": "{{DRSQLVMSize}}",
                        "Subnets": [
                            "sql-subnet"
                        ],
						"StaticVNetIPAddress": "172.16.2.5",
                        "AvailabilitySet": "sqlha-avs",
                        "OsVirtualDisk": {
                            "OsType": "Windows",
                            "OsImageName": "fb83b3509582419d99629ce476bcb5c8__SQL-Server-2014-RTM-12.0.2361.0-Enterprise-ENU-Win2012R2-cy14su05"
                        },
                        "DataVirtualDisks": [
                            {
                                "DiskId": "disk0",
                                "Lun": 0,
                                "LogicalSizeInGB": 40
                            }
                        ],
                        "WindowsConfigSet": {
                            "LocalAdminCredentialId": "DomainAdmin:local",
                            "EnableAutomaticUpdates": false,
                            "ChangePasswordAtLogon": false,
                            "DisableRdp": false,
                            "DomainJoinSettings": {
                                "DomainToJoin": "{{FQDN}}",
                                "CredentialId": "DomainJoinCred"
                            }
                        },
                        "ConfigSets": [
                            "InitSqlAlwaysOnDRNode"
                        ],
                        "DeploymentGroup": "SqlAlwaysOn"
                    }
                ],
                "DiskStorageAccount": "{{DiskStore}}"
            }
        }
    ],
    "DeploymentGroups": [
		{
            "Name": "ADDomainController",
            "Description": "Domain controller VM."
        },
		{
            "Name": "SqlAlwaysOn",
            "Description": "SQL AlwaysOn VM."
        }
    ],
    "Credentials": [
		{
		  "Name": "DomainAdmin",
		  "UserName": "{{Domain}}\\{{AdminName}}",
		  "Password": "{{AdminPassword}}"
		},
        {
            "Name": "DomainAdmin:local",
            "UserName": "{{AdminName}}",
            "Password": "{{AdminPassword}}"
        },
        {
            "Name": "DomainJoinCred",
            "UserName": "{{Domain}}\\{{DomainJoinUserName}}",
            "Password": "{{DomainJoinUserPassword}}"
        }
    ],
    "ConfigSets": [
        {
            "Name": "DomainController",
            "Description": "Active Directory child DC",
            "Endpoints": [],
            "ConfigurationIds": [
                "SetupADNode",
                "SetupADDomainController"
            ]
        },               
        {
            "Name": "InitSqlAlwaysOnDRNode",
            "Description": "SQL VMs within the SqlAlwaysOn deployment.",
            "Endpoints": [
                {
                    "Name": "AGListener",
                    "LocalPort": 1433,
                    "Protocol": "tcp",
                    "Port": 1433,
                    "EnableDirectServerReturn": true,
                    "Rules": [],					
                    "LoadBalancerProbe": {
                        "Name": "AGListener-LB",
                        "Protocol": "tcp",
                        "Port": 59999
                    }
                }
            ],
            "ConfigurationIds": [
				"InitializeSQLDRNode"
            ]
        }
    ],
    "Configurations": [
        {
            "Name": "SetupADNode",
            "Description": "Install AD Domain Services, Group Policy Management Console, and DNS.",
            "Resources": [
				{
                    "Type": "xFormatDisks",
                    "ImportModule": "xAzureDataDisks",
                    "ImportTypeName": "ADITI_xFormatDisks",
                    "Name": "FormatRawDisks",
                    "Args": {
                        "FirstDriveLetter": "F"
                    }
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "ADDomainServices",
                    "Args": {
                        "Name": "AD-Domain-Services",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-ADDomainServices.log"
                    }
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "GroupPolicyManagementConsole",
                    "Args": {
                        "Name": "GPMC",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-GPMC.log"
                    }
                }
            ]
        },
        {
            "Name": "SetupADDomainController",
            "Description": "Configure this server as an additional Active Directory domain controller. See http://technet.microsoft.com/en-us/library/jj574134.aspx.",
            "Resources": [
                {
                    "Credential": null,
                    "GetScript": "return @{Domain = Get-WmiObject Win32_NTDomain}",
                    "SetScript": "\r\nWrite-Verbose \"Creating domain [$DomainNetbiosName ($DomainName)]\"\r\nImport-Module ADDSDeployment -Verbose:$false\r\n\r\n# Temporarily make the RootDC our DNS Server...\r\nSet-DnsClientServerAddress -InterfaceAlias 'Ethernet*' -ServerAddresses $DCRootIPAddress -Validate -ErrorAction Stop\r\n\r\nInstall-ADDSDomainController -DomainName $DomainName `\r\n                             -Credential (New-Object PsCredential($AdminUser, (ConvertTo-SecureString $AdminPass -AsPlainText -Force))) `\r\n                             -SafeModeAdministratorPassword (ConvertTo-SecureString $DSRMPassPhrase -AsPlainText -Force) `\r\n                             -InstallDns `\r\n                             -NoGlobalCatalog `\r\n                             -DatabasePath $DatabasePath `\r\n                             -LogPath $LogPath `\r\n                             -SysvolPath $SysvolPath `\r\n                             -Force `\r\n                             -NoRebootOnCompletion `\r\n                             -ErrorAction Stop `\r\n                             -WarningAction SilentlyContinue\r\n\r\n# Point the DNS server at this server...\r\nSet-DnsClientServerAddress -InterfaceAlias 'Ethernet*' -ServerAddresses '127.0.0.1' -Validate:$false\r\n\r\nWrite-Verbose 'Rebooting'\r\n$global:DSCMachineStatus = 1",
                    "TestScript": "\r\n$d = Get-WmiObject Win32_NTDomain\r\nif ($d.Status -eq 'OK' -AND \r\n    $d.DnsForestName -eq $DomainName -AND \r\n    $d.DomainName -eq $DomainNetbiosName -AND \r\n    $d.DomainControllerName -eq \"\\\\$env:COMPUTERNAME\")\r\n{\r\n\tWrite-Verbose \"Domain [$DomainNetbiosName ($DomainName)] already configured.\"\r\n\treturn $true\r\n}\r\nreturn $false",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "SetupDC",
                    "Args": {
                        "DomainNetbiosName": "{{Domain}}",
                        "DomainName": "{{FQDN}}",
                        "DSRMPassPhrase": "{{DSRMPassPhrase}}",
                        "AdminUser": "{{Domain}}\\{{AdminName}}",
                        "AdminPass": "{{AdminPassword}}",
                        "DatabasePath": "F:\\NTDS",
                        "LogPath": "F:\\NTDS",
                        "SysvolPath": "F:\\SYSVOL",
                        "DCRootIPAddress": "10.0.0.8"
                    }
                },
                {
                    "Type": "Service",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "StartADWebServices",
                    "Args": {
                        "Name": "ADWS",
                        "StartupType": "Automatic",
                        "State": "Running"
                    },                    
                    "Requires": [
                        "[Script]SetupDC"
                    ]
                }
            ]
        },        
        {
            "Name": "InitializeSQLDRNode",
            "Description": "Initializes the SQL DR VM.",
            "Resources": [
                {
                    "Type": "xFormatDisks",
                    "ImportModule": "xAzureDataDisks",
                    "ImportTypeName": "ADITI_xFormatDisks",
                    "Name": "FormatRawDisks",
                    "Args": {
                        "FirstDriveLetter": "F"
                    }
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "FailoverClustering",
                    "Args": {
                        "Name": "Failover-Clustering",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-FailoverCluster.log"
                    }
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "RSATClusteringMgmt",
                    "Args": {
                        "Name": "RSAT-Clustering-Mgmt",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-RSATClusteringMgmt.log"
                    },
                    "Requires": [
                        "[WindowsFeature]FailoverClustering"
                    ]
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "RSATClusteringPowerShell",
                    "Args": {
                        "Name": "RSAT-Clustering-PowerShell",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-RSATClusteringPowershell.log"
                    },
                    "Requires": [
                        "[WindowsFeature]RSATClusteringMgmt"
                    ]
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "RSATClusteringCmdInterface",
                    "Args": {
                        "Name": "RSAT-Clustering-CmdInterface",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-RSATClusteringCmdInterface.log"
                    },
                    "Requires": [
                        "[WindowsFeature]RSATClusteringPowerShell"
                    ]
                },
                {
                    "Type": "WindowsFeature",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "RSATADPowershell",
                    "Args": {
                        "Name": "RSAT-AD-Powershell",
                        "Ensure": "Present",
                        "IncludeAllSubFeature": "true",
                        "LogPath": "%BrewmasterDir%\\Logs\\Install-RSATADPowershell.log"
                    }
                },                
                {
                    "Credential": "DomainAdmin:local",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "AddDomainAdminToLocalAdminGroup",
                    "GetScript": "@{ exists = (net localgroup administrators) -contains $acctname }",
                    "SetScript": "$users = (net localgroup administrators)\r\nif ($users -notcontains $acctname)\r\n{\r\n\tWrite-Verbose \"Adding [$acctname] to local administators group.\"\r\n\tnet localgroup administrators $acctname /Add | Out-Null\r\n}",
                    "TestScript": null,
                    "Args": {
                        "acctname": "{{Domain}}\\{{DomainJoinUserName}}"
                    }
                },
				{
                    "Type": "xFirewall",
                    "ImportModule": "xNetworking",
                    "ImportTypeName": "MSFT_xFirewall",
                    "Name": "SqlServerTcpInRule",
                    "Args": {
                        "Name": "SQLServerTCPIn",
                        "Description": "SQL Server (TCP In)",
                        "LocalPort": "1433",
                        "Protocol": "TCP",
                        "Access": "Allow",
                        "State": "Enabled",
                        "Direction": "Inbound"
                    }
                },
                {
                    "Type": "xFirewall",
                    "ImportModule": "xNetworking",
                    "ImportTypeName": "MSFT_xFirewall",
                    "Name": "SqlServerHAReplicaRule",
                    "Args": {
                        "Name": "SQLServerHAReplica",
                        "Description": "SQL High Availability Replica Endpoint",
                        "LocalPort": "5022",
                        "Protocol": "TCP",
                        "Access": "Allow",
                        "State": "Enabled",
                        "Direction": "Inbound"
                    }
                },
				{
                    "Type": "xFirewall",
                    "ImportModule": "xNetworking",
                    "ImportTypeName": "MSFT_xFirewall",
                    "Name": "SqlServerLoadBalancedEndpointRule",
                    "Args": {
                        "Name": "SQL AG Listener LB Probe (TCP-In)",
                        "Description": "SQL AG Listener LB Probe (TCP-In)",
                        "LocalPort": "59999",
                        "Protocol": "TCP",
                        "Access": "Allow",
                        "State": "Enabled",
                        "Direction": "Inbound"
                    }
                },
                {
                    "Credential": "DomainAdmin:local",
                    "Type": "Script",
                    "ImportModule": null,
                    "ImportTypeName": null,
                    "Name": "ConfigureSqlDbaAccount",
                    "GetScript": "@{ SqlSvrAdminAcct = Invoke-SqlCmd -Query \"exec sp_helpsrvrolemember 'sysadmin'\" -ServerInstance '.' -EA Continue | where MemberName -eq 'sa' }",
                    "SetScript": "[System.Reflection.Assembly]::LoadWithPartialName('Microsoft.SqlServer.SMO')\r\n$s = new-object ('Microsoft.SqlServer.Management.Smo.Server') $env:COMPUTERNAME\r\n$s.Settings.LoginMode = [Microsoft.SqlServer.Management.SMO.ServerLoginMode]::Mixed\r\n$s.Alter()\r\n$list = Get-Service -Name MSSQL*\r\nforeach ($s in $list)\r\n{\r\n   Set-Service -Name $s.Name -StartupType Automatic\r\n   if ($s.Status -ne \"Stopped\")\r\n   {\r\n       $s.Stop()\r\n       $s.WaitForStatus(\"Stopped\")\r\n       $s.Refresh()\r\n   }\r\n   if ($s.Status -ne \"Running\")\r\n   {\r\n      $s.Start()\r\n      $s.WaitForStatus(\"Running\")\r\n      $s.Refresh()\r\n   }\r\n}\r\nInvoke-SqlCmd -Query \"ALTER LOGIN sa ENABLE\" -ServerInstance \".\"\r\nInvoke-SqlCmd -Query \"ALTER LOGIN sa WITH PASSWORD = '$SqlAdminPassword'\" -ServerInstance \".\"\r\n",
                    "TestScript": null,
                    "Args": {
                        "SqlAdminPassword": "{{SqlAdminPassword}}"
                    },
                    "Nodes": [],
                    "Requires": [
                        "[xFirewall]SqlServerTcpInRule",
                        "[xFirewall]SqlServerHAReplicaRule",
                        "[xFirewall]SqlServerLoadBalancedEndpointRule"
                    ],
                    "Description": "Enables SQL authentication and the built-in sa account"
                }
            ]
        }
    ]
}